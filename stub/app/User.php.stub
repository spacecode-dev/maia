<?php

namespace App;

use Illuminate\Database\Eloquent\Relations\MorphToMany;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use SpaceCode\Maia\Traits\HasRoles;

class User extends Authenticatable
{
    use Notifiable, HasRoles;

    /**
     * @var array
     */
    protected $fillable = [
        'name', 'email', 'password',
    ];

    /**
     * @var array
     */
    protected $hidden = [
        'password', 'remember_token',
    ];

    /**
     * @var array
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];

    /**
     * @return MorphToMany
     */
    public function roles(): MorphToMany
    {
        return $this->morphToMany(
            \SpaceCode\Maia\Models\Role::class,
            'model',
            'model_has_roles',
            'model_id',
            'role_id'
        );
    }

    /**
     * @return MorphToMany
     */
    public function permissions(): MorphToMany
    {
        return $this->morphToMany(
            \SpaceCode\Maia\Models\Permission::class,
            'model',
            'model_has_permissions',
            'model_id',
            'permission_id'
        );
    }

    /**
     * @param $type
     * @param null $key
     * @return mixed
     */
    public function getApp($type, $key = null)
    {
        $apps = json_decode($this->apps);
        if(!is_null($key) && !is_null($apps) && !empty($apps->{$type}) && isset($apps->{$type}->{$key})) {
            return data_get($apps, "{$type}.{$key}");
        }
        return null;
    }
}
