<?php

namespace App\Http\Controllers;

use App\Http\Controllers\Controller as Controller;
use App\Notifications\CustomAnswer;
use App\User;
use Illuminate\Support\Facades\View;
use SpaceCode\Maia\Models\ContactForm;
use SpaceCode\Maia\Models\Page;
use SpaceCode\Maia\Models\Portfolio;
use SpaceCode\Maia\Models\PortfolioCategory;
use SpaceCode\Maia\Models\PortfolioTag;
use SpaceCode\Maia\Models\Post;
use SpaceCode\Maia\Models\PostCategory;
use SpaceCode\Maia\Models\PostTag;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Input;
use Illuminate\Support\Facades\Notification;
use Validator;

class MaiaIndexController extends Controller
{
    public function __construct()
    {
        // Google Tag Manager
        $global['tracking-head'] = setting('tracking_google_tag_manager_head');
        $global['tracking-body'] = setting('tracking_google_tag_manager_body');

        if(isset($__env) && trim($__env->yieldContent('json_ld'))) {
            $global['json_ld'] = "<!-- Schema -->\n" . str_replace('&#039;', '"', html_entity_decode($__env->yieldContent('json_ld'), ENT_COMPAT, 'UTF-8')) . "\n";
        } else {
            $global['json_ld'] = null;
        }

        $siteFavicon = siteFavicon();
        if(!is_null($siteFavicon) && !empty($siteFavicon)) {
            $global['favicon'] = "    <!-- Favicon -->\n" . "    <link rel='icon' sizes='180x180' href='" . favicon(siteFavicon(), '180') . "' />\n" . "    <link rel='icon' sizes='32x32' href='" . favicon(siteFavicon(), '32') . "' />\n";
        } else {
            $global['favicon'] = null;
        }

        View::share('globalKey', $global);
    }

    public function homeIndex()
    {
        return view('home');
    }

    /**
     * @param $slug
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\View\View
     */
    public function pageIndex($slug)
    {
        $page = Page::whereSlug($slug)->where(['status' => 'published', 'deleted_at' => null])->firstOrFail();
        return view($page->template === 'default' ? 'page' : 'templates.pages.' . $page->template,
            ['page' => $page]
        );
    }

    /**
     * @param $slug
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\View\View
     */
    public function postIndex($slug)
    {
        $post = Post::whereSlug($slug)->where(['status' => 'published', 'deleted_at' => null])->firstOrFail();
        put_session_view('posts', $post);
        return view($post->template === 'default' ? 'post' : 'templates.posts.' . $post->template,
            ['post' => $post]
        );
    }

    /**
     * @param $slug
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\View\View
     */
    public function postCategoryIndex($slug)
    {
        $postCategory = PostCategory::whereSlug($slug)->firstOrFail();
        return view($postCategory->template === 'default' ? 'postCategory' : 'templates.postCategories.' . $postCategory->template,
            ['postCategory' => $postCategory]
        );
    }

    /**
     * @param $slug
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\View\View
     */
    public function postTagIndex($slug)
    {
        $postTag = PostTag::whereSlug($slug)->firstOrFail();
        return view($postTag->template === 'default' ? 'postTag' : 'templates.postTags.' . $postTag->template,
            ['postTag' => $postTag]
        );
    }

    /**
     * @param $slug
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\View\View
     */
    public function portfolioIndex($slug)
    {
        $portfolio = Portfolio::whereSlug($slug)->where(['status' => 'published', 'deleted_at' => null])->firstOrFail();
        put_session_view('portfolio', $portfolio);
        return view($portfolio->template === 'default' ? 'portfolio' : 'templates.portfolio.' . $portfolio->template,
            ['portfolio' => $portfolio]
        );
    }

    /**
     * @param $slug
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\View\View
     */
    public function portfolioCategoryIndex($slug)
    {
        $portfolioCategory = PortfolioCategory::whereSlug($slug)->firstOrFail();
        return view($portfolioCategory->template === 'default' ? 'portfolioCategory' : 'templates.portfolioCategories.' . $portfolioCategory->template,
            ['portfolioCategory' => $portfolioCategory]
        );
    }

    /**
     * @param $slug
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\View\View
     */
    public function portfolioTagIndex($slug)
    {
        $portfolioTag = PortfolioTag::whereSlug($slug)->firstOrFail();
        return view($portfolioTag->template === 'default' ? 'portfolioTag' : 'templates.portfolioTags.' . $portfolioTag->template,
            ['portfolioTag' => $portfolioTag]
        );
    }
}
